#修改tomcat端口
server.port=8080
#设置Tomcat编码
server.tomcat.uri-encoding=UTF-8

# =====================数据库访问配置=====================
#默认数据源mySql
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/modulesandutils?serverTimezone=GMT%2B8&useSSL=false
#spring.datasource.username=root
#spring.datasource.password=root

#数据源1，mysql
spring.datasource.one.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.one.url=jdbc:mysql://localhost:3306/modulesandutils?serverTimezone=GMT%2B8&useSSL=false
spring.datasource.one.username=root
spring.datasource.one.password=root

#数据源2，postgreSql
spring.datasource.two.driver-class-name=org.postgresql.Driver
spring.datasource.two.url=jdbc:postgresql://localhost:5432/modulesandutils?useSSL=false
spring.datasource.two.username=postgres
spring.datasource.two.password=postgres


# =====================Druid连接池配置=====================
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=50
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=6000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL

#是否在获得连接后检测其可用性
spring.datasource.druid.test-on-borrow=false
#是否在连接放回连接池后检测其可用性
spring.datasource.druid.test-on-return=false
#是否在连接空闲一段时间后检测其可用性
spring.datasource.druid.test-while-idle=true

# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

################################mybatis-plus.configuration################################
# 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/dao/*Mapper.xml
# 如果是放在resource目录 classpath:/dao/*Mapper.xml
mybatis-plus.mapper-locations= classpath*:/mapper/*Mapper.xml
#实体扫描，多个package用逗号或者分号分隔
mybatis-plus.typeAliasesPackage=com.lyr.library.entity
#mybatis-plus.config-location=classpath:mybatis/mybatis-cfg.xml
#主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.db-config.id-type= uuid
#配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
mybatis-plus.configuration.map-underscore-to-camel-case= true
#是否开启二级缓存
mybatis-plus.configuration.cache-enabled= true
#打印sql日志
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
